generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DriverCode {
  id          String     @id @default(cuid())
  language    String
  code        String
  Questions   Questions? @relation(fields: [questionsId], references: [id])
  questionsId Int?
}

model UserCode {
  id          String     @id @default(cuid())
  language    String
  code        String
  Questions   Questions? @relation(fields: [questionsId], references: [id])
  questionsId Int?
}

model Solution {
  id          String     @id @default(cuid())
  language    String
  code        String
  Questions   Questions? @relation(fields: [questionsId], references: [id])
  questionsId Int?
}

model Questions {
  id             Int           @id @default(autoincrement())
  questionNum    Int
  name           String
  difficulty     String
  description    String
  topics         String[]
  arguments      Json
  testcases      Json[]        @default([])
  driverArgument String?
  driverCode     DriverCode[]
  solution       Solution[]
  userCode       UserCode[]
  Submissions    Submissions[]
  Publishable    Boolean       @default(false)
}

model Submissions {
  id          String    @id @default(cuid())
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
  code        String
  Submitted   Boolean
  question    Questions @relation(fields: [questionsId], references: [id])
  questionsId Int
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Submissions   Submissions[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
